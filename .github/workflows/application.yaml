name: Build and Deploy Node.js to AKS

on:
  push:
    branches:
      - main

env:
  REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: nodejs-app

jobs:
  build-and-push:
    name: Build and Push Docker image to ACR
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      # Step 2: Log in to Azure
      - name: 'Log in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to ACR
      - name: 'Log in to Azure Container Registry'
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: docker build . -t $REGISTRY/$IMAGE_NAME:latest

      # Step 5: Push the Docker image to ACR
      - name: Push Docker image to ACR
        run: docker push $REGISTRY/$IMAGE_NAME:latest

  deploy-to-aks:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout the repository
      - name: 'Checkout repository'
        uses: actions/checkout@v3

      # Step 2: Log in to Azure
      - name: 'Log in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Get AKS credentials
      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group apache-k8s-rg --name apache-aks-cluster --overwrite-existing

      # Step 4: Apply Kubernetes manifests (Create or Update Resources)
      - name: 'Apply Kubernetes manifests'
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

      # Step 5: Update Kubernetes deployment with the new image
      - name: 'Update AKS Deployment Image'
        run: |
          kubectl set image deployment/nodejs-app nodejs-app=$REGISTRY/$IMAGE_NAME:latest --record
